%base-button {
	position: relative;

	display: flex;
	align-items: center;
	justify-content: center;

	min-height: 2.5rem;
	padding: 0.5rem 1rem;

	font-weight: $font-weight-semibold;
	font-size: 1rem;
	line-height: 100%;

	border: none;
	border-radius: 0.25rem;

	transition: all $timing-normal ease-in-out;
	user-select: none;
	cursor: pointer;
	outline: none;

	&.-small {
		min-height: 2rem;
		font-size: $font-size-small;
	}

	&.-loading {
		color: transparent;

		&:after {
			content: "";
			position: absolute;
			left: 0;
			right: 0;
			height: 1rem;
			width: 1rem;
			margin: auto;
			border: 2px solid;
			border-radius: 999px;
			animation: spinAround $timing-slowest infinite linear;
		}
	}

	&[disabled],
	&.-disabled {
		opacity: .5;
		cursor: not-allowed;
	}

	&.-fluid {
		width: 100%;
	}
}

@mixin make-button($color: $color-primary) {
	@extend %base-button;

	color: $color-light;
	background-color: $color;

	&:focus {
		@include focused-shadow($color);
	}

	&:hover {
		background-color: mix($color, black, 90%);
	}

	&.-loading {
		color: transparent;

		&:after {
			border-right-color: $color-light;
			border-top-color: $color-light;
		}
	}
}

@mixin make-secondary-button($color: $color-primary) {
	@extend %base-button;

	color: $color;
	background-color: white;

	border: 1px solid $color-gray-300;

	&:focus {
		@include focused-shadow($color);
	}

	&:hover {
		background-color: $color-gray-100;
	}

	&.-loading {
		color: transparent;

		&:after {
			border-right-color: $color;
			border-top-color: $color;
		}
	}
}

@keyframes spinAround {
	from { transform: rotate(0deg); }
	to   { transform: rotate(359deg); }
}

$components-colors: (
	'secondary'  : $color-secondary,
	'positive': $color-positive,
	'negative': $color-negative,
	'warning' : $color-warning,
	'info'    : $color-info,
);

.#{$prefix}button {
	@include make-button();

	@each $key, $value in $components-colors {
		&.-#{$key} {
			@include make-button($value);
		}
	}
}

.#{$prefix}button-secondary {
	@include make-secondary-button();

	@each $key, $value in $components-colors {
		&.-#{$key} {
			@include make-secondary-button($value);
			color: $value;
		}
	}
}
